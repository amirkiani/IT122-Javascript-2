<html>
<head>
    <title>React App Demo</title>
    <script src="https://unpkg.com/react@16/umd/react.development.js"></script>
    <script src="https://unpkg.com/react-dom@16/umd/react-dom.development.js"></script>
    <!-- Don't use this in production: -->
    <script src="https://unpkg.com/babel-standalone@6.15.0/babel.min.js"></script>
</head>

<body>

<div id="root"></div>
<script type="text/babel">
    // define your sub components here
    const ItemList = (props) => {
        return props.items.map((item) => {
            return <li>{item.title}</li>
        });
            
            const Book = props => {  
        return (
            <div>
                <ul>
                {props.bookArray.map((book) => (
                    <li key={book._id}><a href="#" onClick={props.selected}>{book.title}</a></li>
                ))}
                </ul>   
            </div>
        ); 
    };

    const BookDetails = props => {
        return (
            <div>
                <h2>Details for {props.current.title}</h2>               
                <ul>
                    <li className="stats">Author: {props.current.auth}</li>
                    <li className="stats">Year of Release: {props.current.year}</li>
                    <li className="stats">Number of Pages: {props.current.pages}</li>
                </ul>
                    <form>
                        title: <input type="text" value={props.item.title} || ""} /><br/>
                        author: <input type="text" value={props.item.title} || "" /><br/>
                        pages: <input type="text" value={props.item.title} || "" /> <br/>
                        </form>
                        <button onClick={props.handleClear}>Clear</button>
                <p className="home"><a href="#" onClick={props.reset} >Go back to list</a></p>
            </div>
        )
    }

    class App extends React.Component{
      constructor(props){
          super(props);
          // Set initial state using data from server application
          this.state = {
            book: {{{ books }}},
            currentBook: { } // current selected item
          };

          // bind application state to click handler
          this.selectItem = this.selectItem.bind(this);
       }
        handleDelete () {
            console.log('delete me')
        }
       render() {
           return (
               <div>
                   <h2>Book List</h2>
                   <ItemList items={this.state.items} />
                   <hr>
                   <ItemDetail item={this.state.currentItem} />
                   </div>
           ):
           )
       }

      // handle list item clicked
      selectItem(event) {
        event.preventDefault();
        const book = this.state.book.find(book => event.target.text === book.title);
        this.setState({currentBook: book});

 resetCurrent() {
          this.setState({currentBook: { } })
      }
      render() {
        // render the App UI elements

     if (Object.entries(this.state.currentBook).length !== 0 ) {
            return (
            <div>
                <h1>Bargain Books Welcomes You!</h1>
                <BookDetails current={this.state.currentBook} reset={() => this.resetCurrent()} />
            </div>
            );
        } else {
        return (
        
          <div>
            <h1>Bargain Books Welcomes You1</h1> 
            <h2>Choose a book to learn more:</h2>
            <Book bookArray={this.state.book} selected={event => this.selectItem(event)}/>
          </div>
          );
      }}
    }
    ReactDOM.render(<App />, document.getElementById('root'));
</script>
</body>
</html>